{"ast":null,"code":"import { db, auth } from \"../firebase\";\nimport { ref, set, push, increment } from \"firebase/database\"; //setFunction for userData\n\nexport function writeUserData(name, email) {\n  const userId = auth.currentUser.uid;\n  set(ref(db, 'Users/' + userId), {\n    user_id: userId,\n    user_name: name,\n    user_picture: \"https://firebasestorage.googleapis.com/v0/b/premade24-f8d8e.appspot.com/o/Unbenannt.PNG?alt=media&token=7a1510d3-531b-48f4-9e0c-df583cb2e65c\",\n    user_status: \"online\"\n  });\n} //setFunction for my last message information\n\nexport function setMyLastMessage(message, id) {\n  const userId = auth.currentUser.uid;\n  set(ref(db, 'Users/' + id + '/user_chats/' + userId), {\n    lastMessageContent: message,\n    timeLastMessage: -Date.now(),\n    messageRead: increment(1)\n  });\n} //setFunction for opponent last message information\n\nexport function setThereLastMessage(message, id) {\n  const userId = auth.currentUser.uid;\n  set(ref(db, 'Users/' + userId + '/user_chats/' + id), {\n    lastMessageContent: 'You: ' + message,\n    timeLastMessage: -Date.now(),\n    messageRead: 0\n  });\n}\nexport function pushMessage(content, id) {\n  const userId = auth.currentUser.uid;\n  const d = new Date();\n  var minutes = d.getMinutes();\n  var hours = d.getHours();\n\n  if (d.getMinutes() < 10) {\n    minutes = \"0\" + d.getMinutes();\n  }\n\n  if (d.getHours() < 10) {\n    hours = \"0\" + d.getHours();\n  }\n\n  const date = hours + \":\" + minutes;\n  push(ref(db, 'chats/' + userId + id), {\n    content: content,\n    date: date,\n    id: userId,\n    messageIsRead: false\n  });\n}\nexport function pushMessageOther(content, id) {\n  const userId = auth.currentUser.uid;\n  const d = new Date();\n  var minutes = d.getMinutes();\n  var hours = d.getHours();\n\n  if (d.getMinutes() < 10) {\n    minutes = \"0\" + d.getMinutes();\n  }\n\n  if (d.getHours() < 10) {\n    hours = \"0\" + d.getHours();\n  }\n\n  const date = hours + \":\" + minutes;\n  push(ref(db, 'chats/' + id + userId), {\n    content: content,\n    date: date,\n    id: userId,\n    messageIsRead: false\n  });\n}","map":{"version":3,"names":["db","auth","ref","set","push","increment","writeUserData","name","email","userId","currentUser","uid","user_id","user_name","user_picture","user_status","setMyLastMessage","message","id","lastMessageContent","timeLastMessage","Date","now","messageRead","setThereLastMessage","pushMessage","content","d","minutes","getMinutes","hours","getHours","date","messageIsRead","pushMessageOther"],"sources":["C:/Users/Christian/whatsappclone/src/contexts/Database.js"],"sourcesContent":["import { db, auth } from \"../firebase\";\r\nimport {ref, set,push,increment} from \"firebase/database\";\r\n\r\n//setFunction for userData\r\nexport  function writeUserData(name, email) {\r\n    const userId = auth.currentUser.uid\r\n     set(ref(db, 'Users/' + userId ), {\r\n        user_id: userId,\r\n        user_name: name,\r\n        user_picture: \"https://firebasestorage.googleapis.com/v0/b/premade24-f8d8e.appspot.com/o/Unbenannt.PNG?alt=media&token=7a1510d3-531b-48f4-9e0c-df583cb2e65c\",\r\n        user_status: \"online\",\r\n     });\r\n  }\r\n//setFunction for my last message information\r\nexport  function setMyLastMessage(message,id) {\r\n   const userId = auth.currentUser.uid\r\n   set(ref(db, 'Users/' + id + '/user_chats/' +userId   ), {\r\n     lastMessageContent:message,\r\n     timeLastMessage:-Date.now(),\r\n     messageRead:increment(1),\r\n     });\r\n }\r\n //setFunction for opponent last message information\r\n export  function setThereLastMessage(message,id) {\r\n   const userId = auth.currentUser.uid\r\n   set(ref(db, 'Users/' + userId + '/user_chats/' +id   ), {\r\n \r\n     lastMessageContent:'You: '+message,\r\n     timeLastMessage:-Date.now(),\r\n     messageRead:0,\r\n     });\r\n }\r\n export  function pushMessage(content, id) {\r\n   const userId = auth.currentUser.uid\r\n   const d = new Date();\r\n   var minutes = d.getMinutes()\r\n   var hours = d.getHours()\r\n   if(d.getMinutes()<10){\r\n     minutes = \"0\"+d.getMinutes()\r\n   }\r\n   if(d.getHours()<10){\r\n     hours = \"0\"+d.getHours()\r\n   }\r\n   const date = hours+\":\"+minutes\r\n   push(ref(db, 'chats/' + userId + id ), {\r\n   \r\n       content:content,\r\n       date:date,\r\n       id:userId,\r\n       messageIsRead:false,\r\n       \r\n \r\n     });\r\n }\r\n export  function pushMessageOther(content, id) {\r\n   const userId = auth.currentUser.uid\r\n   const d = new Date();\r\n   var minutes = d.getMinutes()\r\n   var hours = d.getHours()\r\n   if(d.getMinutes()<10){\r\n     minutes = \"0\"+d.getMinutes()\r\n   }\r\n   if(d.getHours()<10){\r\n     hours = \"0\"+d.getHours()\r\n   }\r\n   const date = hours+\":\"+minutes\r\n   push(ref(db, 'chats/' + id + userId   ), {\r\n   \r\n       content:content,\r\n       date:date,\r\n       id:userId,\r\n       messageIsRead:false\r\n      \r\n \r\n     });\r\n }"],"mappings":"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"},"metadata":{},"sourceType":"module"}