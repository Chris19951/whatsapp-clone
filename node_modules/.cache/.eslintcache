[{"C:\\Users\\Christian\\whatsappclone\\src\\index.js":"1","C:\\Users\\Christian\\whatsappclone\\src\\App.js":"2","C:\\Users\\Christian\\whatsappclone\\src\\pages\\Signup.js":"3","C:\\Users\\Christian\\whatsappclone\\src\\pages\\Login.js":"4","C:\\Users\\Christian\\whatsappclone\\src\\pages\\Mainpage.js":"5","C:\\Users\\Christian\\whatsappclone\\src\\components\\UserProfil.js":"6","C:\\Users\\Christian\\whatsappclone\\src\\components\\ChatBooble.js":"7","C:\\Users\\Christian\\whatsappclone\\src\\contexts\\AuthContext.js":"8","C:\\Users\\Christian\\whatsappclone\\src\\firebase.js":"9","C:\\Users\\Christian\\whatsappclone\\src\\contexts\\Database.js":"10","C:\\Users\\Christian\\whatsappclone\\src\\contexts\\PrivateRoute.js":"11"},{"size":258,"mtime":1656167342924,"results":"12","hashOfConfig":"13"},{"size":699,"mtime":1656233057804,"results":"14","hashOfConfig":"13"},{"size":3710,"mtime":1656232770994,"results":"15","hashOfConfig":"13"},{"size":1989,"mtime":1656232818599,"results":"16","hashOfConfig":"13"},{"size":13789,"mtime":1657196001710,"results":"17","hashOfConfig":"13"},{"size":2588,"mtime":1657194197220,"results":"18","hashOfConfig":"13"},{"size":971,"mtime":1656240380706,"results":"19","hashOfConfig":"13"},{"size":1150,"mtime":1656233472931,"results":"20","hashOfConfig":"13"},{"size":833,"mtime":1657098825016,"results":"21","hashOfConfig":"13"},{"size":2785,"mtime":1657189222454,"results":"22","hashOfConfig":"13"},{"size":286,"mtime":1656233473996,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1bw5zu9",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"27"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\Users\\Christian\\whatsappclone\\src\\index.js",[],[],[],"C:\\Users\\Christian\\whatsappclone\\src\\App.js",[],[],"C:\\Users\\Christian\\whatsappclone\\src\\pages\\Signup.js",["61"],[],"import {Link,useNavigate} from \"react-router-dom\";\r\nimport {useAuth} from \"../contexts/AuthContext\";\r\nimport {useRef,useState} from \"react\";\r\n\r\nexport default function Signup() {\r\n  //create reference for inputs\r\n  const emailRef = useRef()\r\n  const usernameRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  //create navigate\r\n  const history = useNavigate()\r\n  //create states\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  //getAuth\r\n  const { signup } = useAuth()\r\n  //submit-handler\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n    //ask if the inputs are valid\r\n    if ((passwordRef.current.value !== passwordConfirmRef.current.value)||\r\n    (usernameRef.current.value.length>=10)||\r\n    (usernameRef.current.value.length<=3)||\r\n    (emailRef.current.value.length<=3)||\r\n    (emailRef.current.value.length>=40)||\r\n    (passwordRef.current.value.length<=8)||\r\n    (passwordRef.current.value.length>=50)\r\n    ){//set error if password isnt valid\r\n      if(passwordRef.current.value !== passwordConfirmRef.current.value){\r\n        return setError(\"Password do not match!\")\r\n      }\r\n      if(usernameRef.current.value.length>=10){\r\n        return setError(\"The username can not be bigger than 10 letters!\")\r\n      }\r\n      if(usernameRef.current.value.length<=3){\r\n        return setError(\"The username can not be smaller than 3 letters!\")\r\n      }\r\n      if(emailRef.current.value.length<=3){\r\n        return setError(\"The email can not be smaller than 3 letters!\")\r\n      }\r\n      if(emailRef.current.value.length>=40){\r\n        return setError(\"The email can not be bigger than 40 letters!\")\r\n      }\r\n      if(passwordRef.current.value.length<=8){\r\n        return setError(\"The password can not be smaller than 8 letters!\")\r\n      }\r\n      if(passwordRef.current.value.length>=50){\r\n        return setError(\"The password is to big\")\r\n      }\r\n    }else{//If all Inputs are valid\r\n      //reset the states\r\n      setError(\"\")\r\n      setLoading(true)\r\n      //call signup function\r\n      await signup(emailRef.current.value, passwordRef.current.value, usernameRef.current.value, \"\")\r\n      //navigate into mainpage\r\n      history(\"/\") \r\n      } \r\n      //reset loadingstate\r\n      setLoading(false) \r\n}\r\n\r\n  return (\r\n    <div className=\"signupContainer\">\r\n        <div className=\"signUpBox\">\r\n            <img src=\"/whatsapp-logo-icone-768x786.png\"/>\r\n            <p>Sign Up</p>\r\n            {error && <div className=\"error\"><p>{error}</p></div>}\r\n            <form className=\"SignUpForm\" onSubmit={handleSubmit}>   \r\n                <input ref={usernameRef} type=\"text\"  placeholder=\"Username\" className=\"inputSignup\"\r\n                autoComplete='off' spellCheck='false' autoCorrect='off'/>\r\n                <input ref={emailRef} type=\"email\"  placeholder=\"Email\" className=\"inputSignup\"\r\n                autoComplete='off' spellCheck='false' autoCorrect='off'/>\r\n                <input ref={passwordRef} type=\"password\"  placeholder=\"Password\" className=\"inputSignup\"\r\n                autoComplete='off' spellCheck='false' autoCorrect='off'/>\r\n                <input ref={passwordConfirmRef} type=\"password\"  placeholder=\"Repeat Password\" className=\"inputSignup\"\r\n                autoComplete='off' spellCheck='false' autoCorrect='off'/>\r\n                <div>\r\n                  <button disabled={loading} type=\"submit\" className=\"sumbitButton\">Sign Up</button>\r\n                </div>\r\n            </form>\r\n            <div className=\"linkForm\">\r\n              <p>Already have an Account? <Link to =\"/Login\" className=\"link\">Login</Link></p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}","C:\\Users\\Christian\\whatsappclone\\src\\pages\\Login.js",["62"],[],"import {Link,useNavigate} from \"react-router-dom\";\r\nimport {useAuth} from \"../contexts/AuthContext\";\r\nimport {useRef,useState} from \"react\";\r\n\r\nexport default function Login() {\r\n  //create reference for inputs\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  //create navigate\r\n  const history = useNavigate()\r\n  //create states\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  //getAuth\r\n  const {login} = useAuth()\r\n  //submit-handler\r\n  async function handleSubmit(e) {\r\n    //prevent reload\r\n    e.preventDefault()\r\n    //try if email and password match\r\n    try {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        await login(emailRef.current.value, passwordRef.current.value)\r\n        history(\"/\")\r\n    //pw/email was wrong\r\n    }catch{\r\n        setError(\"Failed to login\")\r\n    }\r\n    setLoading(false) \r\n}\r\n    return (\r\n        <div className=\"signupContainer\">\r\n            <div className=\"signUpBox\">\r\n                <img src=\"/whatsapp-logo-icone-768x786.png\"/>\r\n                <p>Login</p>\r\n                {error && <div className=\"error\"><p>{error}</p></div>}\r\n                <form className=\"SignUpForm\" onSubmit={handleSubmit}>   \r\n                    <input ref={emailRef} type=\"email\"  placeholder=\"Email\" className=\"inputSignup\"\r\n                    autoComplete='off' spellCheck='false' autoCorrect='off'/>\r\n                    <input ref={passwordRef} type=\"password\"  placeholder=\"Password\" className=\"inputSignup\"\r\n                    autoComplete='off' spellCheck='false' autoCorrect='off'/>\r\n                    <div>\r\n                        <button disabled={loading} type=\"submit\" className=\"sumbitButton\">Log In</button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"linkForm\">\r\n                    <p>Not have an Account? <Link to =\"/Signup\" className=\"link\">Sign Up</Link></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Christian\\whatsappclone\\src\\pages\\Mainpage.js",["63","64","65","66","67","68","69","70","71","72"],[],"C:\\Users\\Christian\\whatsappclone\\src\\components\\UserProfil.js",["73"],[],"C:\\Users\\Christian\\whatsappclone\\src\\components\\ChatBooble.js",["74"],[],"import {auth} from \"../firebase\";\r\n\r\nexport default function ChatBooble({context,textInput,time}) {\r\n  //get own userid\r\n  const userId = auth.currentUser.uid\r\n  //Ask is this Message from me?\r\n  //So we can sepperate between\r\n  if (context===userId){\r\n    context=\"incoming\"\r\n  }\r\n  //If the message is not mine\r\n  //call the first div\r\n  //else call the outcoming\r\n  return (context==\"incoming\")?(\r\n    <div className=\"chatBoobleIncoming\">\r\n      <div className=\"chatContentIncoming\">\r\n        <div className=\"textIncoming\">\r\n          <p>{textInput}</p>\r\n        </div>\r\n        <div className='chatInfo'>\r\n          <div>{time}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n) :(\r\n    <div className=\"chatBoobleOutgoing\">\r\n      <div className=\"chatContentOutgoing\">\r\n        <div className=\"textIncoming\">\r\n          <p>{textInput}</p>\r\n        </div>\r\n        <div className='chatInfo'>\r\n          <div>{time}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n)\r\n}","C:\\Users\\Christian\\whatsappclone\\src\\contexts\\AuthContext.js",[],[],"C:\\Users\\Christian\\whatsappclone\\src\\firebase.js",[],[],"C:\\Users\\Christian\\whatsappclone\\src\\contexts\\Database.js",[],[],"C:\\Users\\Christian\\whatsappclone\\src\\contexts\\PrivateRoute.js",[],[],{"ruleId":"75","severity":1,"message":"76","line":67,"column":13,"nodeType":"77","endLine":67,"endColumn":58},{"ruleId":"75","severity":1,"message":"76","line":35,"column":17,"nodeType":"77","endLine":35,"endColumn":62},{"ruleId":"78","severity":1,"message":"79","line":56,"column":18,"nodeType":"80","endLine":56,"endColumn":29},{"ruleId":"81","severity":1,"message":"82","line":70,"column":13,"nodeType":"80","messageId":"83","endLine":70,"endColumn":21},{"ruleId":"84","severity":1,"message":"85","line":71,"column":7,"nodeType":"86","messageId":"87","endLine":76,"endColumn":8},{"ruleId":"84","severity":1,"message":"85","line":81,"column":7,"nodeType":"86","messageId":"87","endLine":92,"endColumn":8},{"ruleId":"88","severity":1,"message":"89","line":138,"column":33,"nodeType":"90","messageId":"91","endLine":138,"endColumn":35},{"ruleId":"88","severity":1,"message":"89","line":151,"column":35,"nodeType":"90","messageId":"91","endLine":151,"endColumn":37},{"ruleId":"78","severity":1,"message":"92","line":202,"column":6,"nodeType":"93","endLine":202,"endColumn":19,"suggestions":"94"},{"ruleId":"78","severity":1,"message":"92","line":217,"column":6,"nodeType":"93","endLine":217,"endColumn":8,"suggestions":"95"},{"ruleId":"78","severity":1,"message":"92","line":234,"column":6,"nodeType":"93","endLine":234,"endColumn":19,"suggestions":"96"},{"ruleId":"75","severity":1,"message":"76","line":358,"column":11,"nodeType":"77","endLine":358,"endColumn":41},{"ruleId":"97","severity":1,"message":"98","line":27,"column":9,"nodeType":"80","messageId":"99","endLine":27,"endColumn":13},{"ruleId":"88","severity":1,"message":"100","line":14,"column":18,"nodeType":"90","messageId":"91","endLine":14,"endColumn":20},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","no-unused-vars","'progress' is assigned a value but never used.","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["101"],["102"],["103"],"no-redeclare","'date' is already defined.","redeclared","Expected '===' and instead saw '=='.",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [filterValue, userId]",{"range":"110","text":"111"},"Update the dependencies array to be: [userId]",{"range":"112","text":"113"},"Update the dependencies array to be: [oponentUser, userId]",{"range":"114","text":"115"},[6816,6829],"[filterValue, userId]",[7270,7272],"[userId]",[7760,7773],"[oponentUser, userId]"]